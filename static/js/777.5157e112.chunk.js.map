{"version":3,"file":"static/js/777.5157e112.chunk.js","mappings":"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","sources":["components/Loader/Loader.styled.js","components/Loader/Loader.jsx","components/Notification/Notification.jsx","components/TrendingToday/TrendingToday.styled.js","components/TrendingToday/TrendingToday.jsx","servises/createSlug.js","hooks/useFetchMoviesByQuery.js","components/Searchbar/Searchbar.styled.js","components/Searchbar/Searchbar.jsx","pages/Movies.jsx","servises/themoviedb-api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const LoaderWrapper = styled.div`\n  position: fixed;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100vw;\n  height: 100vh;\n`;\n","import { ThreeCircles } from 'react-loader-spinner';\nimport { LoaderWrapper } from './Loader.styled';\n\nexport const Loader = () => {\n  return (\n    <LoaderWrapper>\n      <ThreeCircles\n        height=\"100\"\n        width=\"100\"\n        color=\"rgb(255,69,0)\"\n        wrapperStyle={{}}\n        wrapperClass=\"\"\n        visible={true}\n        ariaLabel=\"three-circles-rotating\"\n        outerCircleColor=\"\"\n        innerCircleColor=\"\"\n        middleCircleColor=\"\"\n      />\n    </LoaderWrapper>\n  );\n};\n","import { toast, ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nexport const NotificationSuccess = () =>\n  toast.success(`Hooray! We found some movies`, {\n    position: 'top-right',\n    autoClose: 3000,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n    progress: undefined,\n    theme: 'light',\n  });\n\nexport const NotificationError = () =>\n  toast.error('Wrong search parameter, reload the page and try again', {\n    position: 'top-right',\n    autoClose: 3000,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n    progress: undefined,\n    theme: 'light',\n  });\n\nexport const Toast = () => {\n  return (\n    <ToastContainer\n      position=\"top-right\"\n      autoClose={5000}\n      hideProgressBar={false}\n      newestOnTop={false}\n      closeOnClick\n      rtl={false}\n      pauseOnFocusLoss\n      draggable\n      pauseOnHover\n      theme=\"light\"\n    />\n  );\n};\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const TrendingTodayWrapper = styled.main`\n  text-align: center;\n`;\n\nexport const Title = styled.h2`\n  margin: 0 0 20px 0;\n  color: ${p => p.theme.colors.accent};\n  font-size: ${p => p.theme.fontSizes.xl};\n  font-weight: ${p => p.theme.fontWeights.bold};\n`;\n\nexport const List = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  grid-column-gap: 10px;\n  grid-row-gap: 1em;\n`;\n\nexport const Movie = styled.li`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const MovieLink = styled(Link)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n\n  color: ${p => p.theme.colors.primary};\n  font-size: ${p => p.theme.fontSizes.m};\n  font-weight: ${p => p.theme.fontWeights.bold};\n\n  background-color: ${p => p.theme.colors.secondary};\n  border: ${p => p.theme.borders.normal} ${p => p.theme.colors.secondary};\n  box-shadow: 1px 1px 3px ${p => p.theme.colors.muted};\n  border-radius: ${p => p.theme.radii.normal};\n  text-decoration: none;\n  &:not(:last-child) {\n    margin-bottom: 10px;\n  }\n  &:hover {\n    color: ${p => p.theme.colors.accent};\n\n    border: ${p => p.theme.borders.normal} ${p => p.theme.colors.accent};\n    box-shadow: 1px 1px 3px ${p => p.theme.colors.accent};\n    text-decoration: underline;\n  }\n`;\n\nexport const Poster = styled.div`\n  width: 300px;\n  height: 450px;\n  margin-bottom: 10px;\n  padding-top: 10px;\n`;\n\nexport const MoviesTitle = styled.p`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: 10px;\n  height: 100px;\n`;\n","import PropTypes from 'prop-types';\nimport {\n  TrendingTodayWrapper,\n  List,\n  Title,\n  Poster,\n  Movie,\n  MovieLink,\n  MoviesTitle,\n} from './TrendingToday.styled';\nimport { createSlug } from 'servises/createSlug';\nimport image from '../../img/no-poster-available.jpg';\n\nconst IMG_BASE_URL = 'https://image.tmdb.org/t/p/w300';\n\nexport const TrendingMovies = ({ movies, title, location, to }) => {\n  const getLabel = () => {\n    const labelText = to === '' ? 'BACK TO MOVIES' : 'BACK TO HOME';\n    return labelText;\n  };\n\n  return (\n    <TrendingTodayWrapper>\n      {title && <Title>{title}</Title>}\n      <List>\n        {movies.map(movie => (\n          <Movie key={movie.id}>\n            <MovieLink\n              to={`${to}${createSlug(`${movie.title} ${movie.id}`)}`}\n              state={{ from: { location, label: getLabel() } }}\n            >\n              <Poster>\n                {movie.poster_path ? (\n                  <img\n                    src={`${IMG_BASE_URL}${movie.poster_path}`}\n                    alt={movie.title}\n                  />\n                ) : (\n                  <img src={`${image}`} alt=\"no-poster-available\" />\n                )}\n              </Poster>\n              <MoviesTitle>{movie.title}</MoviesTitle>\n            </MovieLink>\n            {}\n          </Movie>\n        ))}\n      </List>\n    </TrendingTodayWrapper>\n  );\n};\n\nTrendingMovies.propTypes = {\n  movies: PropTypes.array.isRequired,\n  title: PropTypes.string,\n  location: PropTypes.object.isRequired,\n  to: PropTypes.string,\n};\n","import slugify from 'slugify';\n\nexport const createSlug = string => slugify(string, { lower: true });\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { fetchMoviesByQuery } from 'servises/themoviedb-api';\nimport { NotificationError } from 'components/Notification/Notification';\n\nconst Status = {\n  IDLE: 'idle',\n  PENDING: 'pending',\n  RESOLVED: 'resolved',\n  REJECTED: 'rejected',\n};\n\nexport const useFetchMoviesByQuery = () => {\n  const [movies, setMovies] = useState([]);\n  const [status, setStatus] = useState('');\n  const [searchParams, setSearchParams] = useSearchParams({});\n  const query = searchParams.get('query') ?? '';\n\n  useEffect(() => {\n    if (query === '') {\n      return;\n    }\n    \n    async function fetch() {\n      try {\n        setStatus(Status.PENDING);\n        const movies = await fetchMoviesByQuery(query);\n        if (movies.length > 0) {\n          setMovies(movies);\n          setStatus(Status.RESOLVED);\n        } else {\n          setStatus(Status.REJECTED);\n          NotificationError();\n        }\n      } catch (error) {\n        setStatus(Status.REJECTED);\n        console.log(error.message);\n        NotificationError();\n      }\n    }\n    fetch();\n  }, [query]);\n\n  const onInputChange = value => {\n    let query = value;\n    if (query) {\n      setSearchParams({ query });\n    } else {\n      setSearchParams({});\n    }\n  };\n  \n  return { movies, status, onInputChange };\n};\n","import styled from 'styled-components';\nimport { IoIosSearch } from 'react-icons/io';\nimport { Form, Field } from 'formik';\n\nexport const FormWrapper = styled.div`\n  top: 0;\n  left: 0;\n  position: sticky;\n  z-index: 1100;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 64px;\n  padding: 12px 24px;\n\n  background-color: ${p => p.theme.colors.accent};\n  box-shadow: 2px 2px 5px ${p => p.theme.colors.muted};\n`;\n\nexport const SearchForm = styled(Form)`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n\n  background-color: ${p => p.theme.colors.secondary};\n  border-radius: ${p => p.theme.radii.normal};\n  overflow: hidden;\n`;\n\nexport const SearchButton = styled.button`\n  display: inline-block;\n  width: 48px;\n  height: 48px;\n\n  border: none;\n  background-size: 40%;\n  background-repeat: no-repeat;\n  background-position: center;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n  &:hover {\n    opacity: 1;\n  }\n  & svg {\n    width: 24px;\n    height: 24px;\n  }\n  &::placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n`;\n\nexport const ButtonLabel = styled.span`\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  padding: 0;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  white-space: nowrap;\n  clip-path: inset(50%);\n  border: none;\n`;\n\nexport const Input = styled(Field)`\n  display: inline-block;\n  padding: 0 4px;\n  width: 100%;\n\n  font: inherit;\n  font-size: ${p => p.theme.fontSizes.s};\n  font-weight: ${p => p.theme.fontWeights.normal};\n  border: none;\n  outline: none;\n  &::placeholder {\n    font: inherit;\n  }\n`;\n\nexport const Icon = styled(IoIosSearch)`\n  margin: 0;\n`;\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Formik, ErrorMessage } from 'formik';\nimport * as yup from 'yup';\nimport {\n  FormWrapper,\n  SearchForm,\n  SearchButton,\n  ButtonLabel,\n  Input,\n  Icon,\n} from './Searchbar.styled';\n\nexport const Searchbar = ({ onSubmit }) => {\n  const [inputParam, setInputParam] = useState('');\n  const schema = yup\n    .object()\n    .shape(() => setInputParam(inputParam).yup.string().required().trim());\n\n  const handleSubmit = (values, { resetForm }) => {\n    onSubmit(values.inputParam);\n    resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={{ inputParam }}\n      onSubmit={handleSubmit}\n      validationSchema={schema}\n    >\n      <FormWrapper>\n        <SearchForm>\n          <SearchButton type=\"submit\">\n            <Icon />\n            <ButtonLabel>Search</ButtonLabel>\n          </SearchButton>\n          <Input\n            type=\"text\"\n            name=\"inputParam\"\n            placeholder=\"Search movies\"\n            autoFocus\n          />\n          <ErrorMessage name=\"inputParam\" />\n        </SearchForm>\n      </FormWrapper>\n    </Formik>\n  );\n};\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import { useParams, Outlet, useLocation } from 'react-router-dom';\nimport { useFetchMoviesByQuery } from 'hooks/useFetchMoviesByQuery';\nimport { Searchbar } from 'components/Searchbar/Searchbar';\nimport { TrendingMovies } from 'components/TrendingToday/TrendingToday';\nimport { Loader } from 'components/Loader/Loader';\nimport { NotFound } from 'components/NotFound/NotFound';\n\nexport default function Movies() {\n  const { movies, status, onInputChange } = useFetchMoviesByQuery();\n  const { slug } = useParams();\n  const movieId = slug && slug.match(/[a-z0-9]+$/)[0];\n  const location = useLocation();\n  \n  return (\n    <>\n      {!movieId && (\n        <>\n          <Searchbar onSubmit={onInputChange} />\n          {status === 'pending' && <Loader />}\n          {status === 'resolved' && (\n            <TrendingMovies movies={movies} location={location} to={''} />\n          )}\n          {status === 'rejected' && <NotFound />}\n        </>\n      )}\n      <Outlet />\n    </>\n  );\n}\n","import axios from 'axios';\n\nconst API_KEY = '0914d39eb3001af3cbf4eab1bcce1db8';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport const fetchMovies = async () => {\n  const response = await axios.get(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n  );\n  return response.data.results;\n};\n\nexport const fetchMoviesById = async id => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${id}?api_key=${API_KEY}`\n  );\n  return response.data;\n};\n\nexport const fetchCastsById = async id => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}`\n  );\n  return response.data;\n};\n\nexport const fetchReviewsById = async id => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}`\n  );\n  return response.data.results;\n};\n\nexport const fetchMoviesByQuery = async query => {\n  const response = await axios.get(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}`\n  );\n  return response.data.results;\n};\n\nexport const fetchVideo = async id => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${id}/videos?api_key=${API_KEY}`\n  );\n  return response.data.results;\n};\n"],"names":["LoaderWrapper","styled","Loader","height","width","color","wrapperStyle","wrapperClass","visible","ariaLabel","outerCircleColor","innerCircleColor","middleCircleColor","NotificationError","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","Toast","newestOnTop","rtl","pauseOnFocusLoss","TrendingTodayWrapper","Title","p","colors","accent","fontSizes","xl","fontWeights","bold","List","Movie","MovieLink","Link","primary","m","secondary","borders","normal","muted","radii","Poster","MoviesTitle","TrendingMovies","movies","title","location","to","map","movie","string","id","slugify","lower","state","from","label","poster_path","src","alt","image","Status","FormWrapper","SearchForm","Form","SearchButton","ButtonLabel","Input","Field","s","Icon","IoIosSearch","Searchbar","onSubmit","useState","inputParam","setInputParam","schema","yup","shape","required","trim","initialValues","values","resetForm","validationSchema","type","name","placeholder","autoFocus","Movies","setMovies","status","setStatus","useSearchParams","searchParams","setSearchParams","query","get","useEffect","fetchMoviesByQuery","length","console","log","message","fetch","onInputChange","value","useFetchMoviesByQuery","slug","useParams","movieId","match","useLocation","NotFound","API_KEY","BASE_URL","fetchMovies","axios","response","data","results","fetchMoviesById","fetchCastsById","fetchReviewsById","fetchVideo"],"sourceRoot":""}